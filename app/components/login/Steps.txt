Jan 12th, 2016

1. Signed up for google app engine using chaitu.mk.dev@gmail.com account. used Amex Blue Cash card.

2. Downloaded Google Cloud SDK installer.

	Install type is single user.
	Install location is "C:\Users\chait\AppData\Local\Google\Cloud SDK"
	Did not select bundled python and beta commands.
	installation failed because it needs python on path.
	this time around I selected bundled python.
	
* Run `gcloud --help` to see the Cloud Platform services you can interact with. And run `gcloud help COMMAND` to get help on any gcloud command.
* Run `gcloud topic -h` to learn about advanced features of the SDK like arg files and output formatting


cloned a repository to my local git using below command:
gcloud source repos clone java-gae-quickstart --project=firstwebapp-155500

Authenticate using the following command:
$gcloud init

Clone your empty Cloud Repository to a local Git repository:
$gcloud source repos clone java-gae-quickstart --project=firstwebapp-155500

 Note: This may display a "warning: remote HEAD refers to nonexistent ref, unable to checkout." message that is safe to ignore.
Switch to your new local Git repository:

$cd java-gae-quickstart

Once you've committed code to your local repository, push it to your Cloud Repository using:
$git push -u origin master

these commands are not working.

now installing "App Engine SDK for Java"

copied the extract to "C:\appengine-java-sdk-1.9.48"

installed Python in "C:\Python36" folder

gcloud init

gcloud auth list

gcloud config list

gcloud components update

gcloud source repos clone java-gae-quickstart --project=firstwebapp-155500


command for installing Google App engine SDK for Java

gcloud components update gae-java

use below command to login and this needs to be done before doing anything else.
gcloud auth login

to signout use:
gcloud auth revoke

To install or remove components at your current SDK version [139.0.1], run:
  $ gcloud components install COMPONENT_ID
  $ gcloud components remove COMPONENT_ID


gcloud components install app-engine-java

JSTL tags are giving error. so had to download jstl-1.2.jar  and added it to project dependencies.

Having problems with JSTL/JSP with Java 8. so downloaded Java 6.



getting errors for jdoconfig. finally resolved by editing it to below.

<jdoconfig xmlns="http://java.sun.com/xml/ns/jdo/jdoconfig"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/jdo">
   
   
I had to edit org.eclipse.wst.common.project.facet.core.xml file under settings to use java 1.7
and then under project properties -> 'Run/Debug settings' -> Edit -> Edit launch configuration properties goto JRE tab and select alternate JRE as jre7.

I also removed any JSTL code and changed to plain JSP code.

finally things are working.

trying to deploy the app to cloud:
changed <application>firstwebapp-155500</application> in appengine-web.xml file.

got below error.


Unable to update app: Cannot get the System Java Compiler. Please use a JDK, not a JRE.

See the deployment console for more details
Unable to update app: Cannot get the System Java Compiler. Please use a JDK, not a JRE.


edited C:\Users\chait\eclipse\java-neon\eclipse\eclipse.ini file.

added 2 lines at the top
-vm
C:\Program Files\Java\jdk1.7.0_80\bin\javaw.exe

and modified 
-Dosgi.requiredJavaVersion=1.7
-Dosgi.requiredJavaVersion=1.7

now eclipse is not starting. it turns out that eclipse neon 4.6 requires Java 8

time to download another eclipse that works with Java 7

******Important*********
Right click on project properties and goto "facets" and set Java version to 1.7
******Important*********


Jan 23rd, 2017

created a twilio account using chaitu.mk.dev@gmail.com
and gmail password.





********************************************************************************************************
********************************************************************************************************
********************************************************************************************************
********************************************************************************************************

Jan 27th, 2017

below is typeScript and Angular 2 section.

let us start with installing npm

downloaded C:\Chaitanya\TypeScript\downloads\node-v6.9.4-x64.msi

installed npm

installing TypeScript using "npm install -g  typescript"

C:\Users\chait>npm install -g  typescript
C:\Users\chait\AppData\Roaming\npm\tsc -> C:\Users\chait\AppData\Roaming\npm\node_modules\typescript\bin\tsc
C:\Users\chait\AppData\Roaming\npm\tsserver -> C:\Users\chait\AppData\Roaming\npm\node_modules\typescript\bin\tsserver
C:\Users\chait\AppData\Roaming\npm
`-- typescript@2.1.5


C:\Users\chait>
C:\Users\chait>
C:\Users\chait>tsc --version
Version 2.1.5

C:\Users\chait>
C:\Users\chait>

install http server using "npm install http-server -g"


C:\Users\chait>npm install http-server -g
C:\Users\chait\AppData\Roaming\npm\hs -> C:\Users\chait\AppData\Roaming\npm\node_modules\http-server\bin\http-server
C:\Users\chait\AppData\Roaming\npm\http-server -> C:\Users\chait\AppData\Roaming\npm\node_modules\http-server\bin\http-server
C:\Users\chait\AppData\Roaming\npm
`-- http-server@0.9.0
  +-- colors@1.0.3
  +-- corser@2.0.1
  +-- ecstatic@1.4.1
  | +-- he@0.5.0
  | +-- mime@1.3.4
  | +-- minimist@1.2.0
  | `-- url-join@1.1.0
  +-- http-proxy@1.16.2
  | +-- eventemitter3@1.2.0
  | `-- requires-port@1.0.0
  +-- opener@1.4.2
  +-- optimist@0.6.1
  | +-- minimist@0.0.10
  | `-- wordwrap@0.0.3
  +-- portfinder@0.4.0
  | +-- async@0.9.0
  | `-- mkdirp@0.5.1
  |   `-- minimist@0.0.8
  `-- union@0.4.6
    `-- qs@2.3.3


C:\Users\chait>

install live server using "npm install live-server -g"

npm install node-inspector -g

To change the default port of node-inspector from 8080 to 8099 we will use the below command

node-inspector --web-port=8099

installed webclipse for Angular 2 in eclipse.

starting a new project:

create a new directory auction
1. npm init -y

C:\Chaitanya\TypeScript\proj\auction>npm init -y
Wrote to C:\Chaitanya\TypeScript\proj\auction\package.json:

2. edit package.json 
	- remove unnecessary properties related to publication.
	- add private: true
	- add start command to scripts.
	- add dependencies and devDependencies
	- check the file exact changes
3. now run "npm install"

C:\Chaitanya\TypeScript\proj\auction>npm install
now npm has created "node_modules" folder and downloaded the dependencies over there.

4. create systemjs.config.js
5. create tsconfig.json
6. create index.html
7. create app/app.component.ts
8. create app/app.module.ts
9. create app/main.ts - this step was missing in book.



****************************************************************************************************************

created Google API key using steps below.
https://developers.google.com/identity/sign-in/web/devconsole-project


